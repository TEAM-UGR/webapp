name: Node.js CI

# on:
#   push:
#     branches: [main]

on:
  pull_request:
    branches: [main]

env:
  HOST: ${{  secrets.HOST  }}
  DB_USER: ${{  secrets.DB_USER  }}
  PASSWORD: ${{  secrets.PASSWORD  }}
  DATABASE: ${{  secrets.DATABASE  }}
  ENV: ${{  secrets.ENV  }}
  PROJECT_ID: ${{  secrets.PROJECT_ID  }}

jobs:
  packer-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to webapp
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"

      - name: Create .env
        run: touch .env

      - name: Generate ZIP file
        run: zip -r webapp-a2-main.zip .

      - name: Install dependencies
        run: npm ci

      - name: Start mysql server
        run: sudo systemctl start mysql

      - name: GCLOUD SA validation
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_Key}}"

      - name: Test
        run: npm test

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Install Packer
        run: packer init centos-nodejs-using-packer.pkr.hcl

      # - name: Packer Build
      #   run: packer build centos-nodejs-using-packer.pkr.hcl

      - name: Fetch database name
        run: |
          DATABASE=$(gcloud secrets versions access 1 --secret="databasename")
          echo "DATABASE=$DATABASE" >> $GITHUB_ENV
          echo $DATABASE

      - name: Fetch database password
        run: |
          PASSWORD=$(gcloud secrets versions access 1 --secret="databasepassword")
          echo "PASSWORD=$PASSWORD" >> $GITHUB_ENV
          echo $PASSWORD

      - name: Fetch database hostname
        run: |
          HOST=$(gcloud secrets versions access 1 --secret="databasehostname")
          echo "HOST=$HOST" >> $GITHUB_ENV
          echo $HOST

      - name: Fetch PORT
        run: |
          PORT=$(gcloud secrets versions access 1 --secret="port")
          echo "PORT=$PORT" >> $GITHUB_ENV
          echo $PORT

      - name: Fetch ENV value
        run: |
          ENV=$(gcloud secrets versions access 1 --secret="env")
          echo "ENV=$ENV" >> $GITHUB_ENV
          echo $ENV

      - name: Fetch VM encryption key
        run: |
          VMKEY=$(gcloud secrets versions access 1 --secret="vmencryptionkey")
          echo "VMKEY=$VMKEY" >> $GITHUB_ENV
          echo $VMKEY

      # - name: Build Packer
      #   id: packer_build
      #   run:
      #     packer build centos-nodejs-using-packer.pkr.hcl

      - name: Build Packer
        id: packer_build2
        run: |
          # PACKER_OUTPUT=$(packer build centos-nodejs-using-packer.pkr.hcl)
          # echo "$PACKER_OUTPUT"
          # IMAGE_ID=$(echo "$PACKER_OUTPUT" | grep 'A disk image was created' | grep -o "packer-[0-9]*")
          echo "IMAGE_ID=packer-1712784938"
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV

      - name: Instance Template new Image
        id: create_instance_template
        run: |
          TEMPLATE_NAME="computeinstancetemplate-${{ github.run_id }}"
          echo "TEMPLATE_NAME=$TEMPLATE_NAME" >> $GITHUB_ENV
          echo "Creating instance template with the image ID: $IMAGE_ID"
          TEMPLATE_PATH=$(gcloud compute instance-templates create $TEMPLATE_NAME \
            --machine-type=e2-medium \
            --image-project=${{  secrets.PROJECT_ID  }} \
            --image=$IMAGE_ID \
            --boot-disk-type=pd-balanced \
            --boot-disk-size=50 \
            --region=us-east1 \
            --subnet=projects/development-414823/regions/us-east1/subnetworks/webapp \
            --scopes=cloud-platform \
            --instance-template-region=us-east1 \
            --create-disk=auto-delete=yes \
            --boot-disk-kms-key=$VMKEY \
            --tags=denyfirewalltag,allowfirewalltag \
            --service-account=ops-agent-sa@development-414823.iam.gserviceaccount.com \
            --metadata=startup-script=$'

            #!/bin/bash 
            set -e
            echo "DATABASE=${{ env.DATABASE}}" >> /home/webapp-main/.env
            echo "DB_USER=${{ env.DB_USER }}" >> /home/webapp-main/.env
            echo "PASSWORD=${{ env.PASSWORD }}" >> /home/webapp-main/.env
            echo "HOST=${{ env.HOST }}" >> /home/webapp-main/.env
            echo "PORT=3000" >> /home/webapp-main/.env
            echo "ENV=live" >> /home/webapp-main/.env' --format="value(selfLink)")
            
            echo "TEMPLATE_PATH=$TEMPLATE_PATH" >> $GITHUB_ENV

      - name: Set Instance template
        run: |
            gcloud compute instance-groups managed set-instance-template $INSTANCE_GROUP_NAME \
              --template=$TEMPLATE_PATH \
              --region=us-east1 \

      - name: Instance Group Rolling
        run: |
          gcloud compute instance-groups managed rolling-action start-update computeregioninstancegroupmanager \
            --max-unavailable=0 \
            --version template=$TEMPLATE_PATH \
            --region us-east1

      - name: Managed instance group refresh
        run: |
          gcloud compute instance-groups managed wait-until computeregioninstancegroupmanager \
            --version-target-reached \
            --region us-east1
